import logging
import logging.config

#######################################################################
# Init the logger
def config_root_logger(log_file='perThreadLogging.log'):
  formatter = "| %(levelname)-5s"   \
              "  %(asctime)-15s"    \
              "| %(threadName)-11s" \
              "| %(message)s"
  logging.config.dictConfig({
      'version': 1,
      'formatters': {
          'root_formatter': {
              'format': formatter
          }
      },
      'handlers': {
          'console': {
              'level': 'INFO',
              'class': 'logging.StreamHandler',
              'formatter': 'root_formatter'
          },
          'log_file': {
              'class': 'logging.FileHandler',
              'level': 'DEBUG',
              'filename': log_file,
              'formatter': 'root_formatter',
          }
      },
      'loggers': {
          '': {
              'handlers': [
                  #'console', # Shows the log over the console. Compromises the performance
                  'log_file',
              ],
              'level': 'DEBUG',
              'propagate': True
          }
      }
  })


#######################################################################
# Detect and create a string with the exception info. Line number, line and error
import linecache
import sys
def PrintException():
  exc_type, exc_obj, tb = sys.exc_info()
  f = tb.tb_frame
  lineno = tb.tb_lineno
  filename = f.f_code.co_filename
  linecache.checkcache(filename)
  line = linecache.getline(filename, lineno, f.f_globals)
  exceptionLine = 'EXCEPTION IN ('+filename+'\nLINE NUMBER: '+str(lineno)+'\nLINE: '+line.strip()+'\nERROR: '+str(exc_obj)
  return exceptionLine

#######################################################################
# Send a custom string message notification using Telegram
def messageTelegram(message):
    TOKEN   = settings.TELEGRAM_TOKEN        # Token generated by @BotFather
    CHAT_ID = settings.TELEGRAM_CHAT_ID      # chat_id get from https://api.telegram.org/bot_______TOKEN_____/getUpdates
    tb      = telebot.TeleBot(TOKEN)         # Start the Telegram bot handler
    tb.send_message(CHAT_ID, message)        # Send the message